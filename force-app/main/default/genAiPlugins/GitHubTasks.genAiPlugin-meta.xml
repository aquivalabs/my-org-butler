<?xml version="1.0" encoding="UTF-8"?>
<GenAiPlugin xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <aiPluginUtterances>
        <developerName>utterance_github_tasks0</developerName>
        <language xsi:nil="true"/>
        <masterLabel>utterance_github_tasks0</masterLabel>
        <utterance>
- Show recent changes in a repository
- View detailed commit information
- Compare changes between commits
- Get information about a GitHub user
- List my GitHub repositories
- Show me repository topics
- Get the README of a repository
- List and search for issues
- Create a new issue in a repository
- Update the status of an issue
- Add a comment to an issue
- List pull requests for a repository
- View pull request details and comments
- Search repositories by topic
        </utterance>
    </aiPluginUtterances>
    <canEscalate>false</canEscalate>
    <description>
Use this topic fxor comprehensive GitHub repository insights. Get detailed commit history with file-level changes, compare commits or branches, manage issues and pull requests, and search across repositories. Provides rich context about code changes, including modified files and their content.
    </description>
    <developerName>GitHubTasks</developerName>
    <genAiFunctions>
        <functionName>CallGitHubApi</functionName>
    </genAiFunctions>
    <genAiPluginInstructions>
        <description>BASICS:
1. Find repositories automatically:
   - Use the API to find repos, never ask for names
   - Try searching if needed
   
2. Tell stories, not tech details:
   GOOD: "The login page got a fresh new design and the forgot password feature now works properly"
   BAD: "feat(ui): redesign login page [abc123]"

3. Focus on what matters:
   - Group related changes together
   - Explain why things changed
   - Skip technical jargon
   - No commit hashes unless asked</description>
        <developerName>instruction_basics0</developerName>
        <language>en_US</language>
        <masterLabel>instruction_basics0</masterLabel>
    </genAiPluginInstructions>

    <genAiPluginInstructions>
        <description>OPENAPI SPECIFICATION:
Here is the OpenAPI spec for reference:

openapi: 3.0.0
info:
  title: GitHub API (Minified for AgentForce)
  version: 1.4.0
  description: 
    A fully consolidated GitHub OpenAPI spec for AgentForce.
    Includes repository browsing, issues, pull requests, commit diffs,
    and search, with structured response schemas for reasoning.
servers:
  - url: https://api.github.com
paths:
  /user:
    get:
      summary: Get the authenticated user
      operationId: getAuthenticatedUser
  /users/{username}:
    get:
      summary: Get a user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
  /user/repos:
    get:
      summary: List repositories for the authenticated user
  /repos/{owner}/{repo}:
    get:
      summary: Get a repository
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
  /repos/{owner}/{repo}/topics:
    get:
      summary: List repository topics
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
  /repos/{owner}/{repo}/readme:
    get:
      summary: Get repository README
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
  /repos/{owner}/{repo}/commits:
    get:
      summary: List commits
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
  /repos/{owner}/{repo}/commits/{commit_sha}:
    get:
      summary: Get a single commit
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: commit_sha
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  sha:
                    type: string
                  commit:
                    type: object
                    properties:
                      message:
                        type: string
                      author:
                        type: object
                        properties:
                          name:
                            type: string
                          date:
                            type: string
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        filename:
                          type: string
                        status:
                          type: string
                        additions:
                          type: integer
                        deletions:
                          type: integer
                        changes:
                          type: integer
                        patch:
                          type: string
                        contents_url:
                          type: string
  /repos/{owner}/{repo}/compare/{base}...{head}:
    get:
      summary: Compare two commits
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: base
          in: path
          required: true
          schema:
            type: string
        - name: head
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  ahead_by:
                    type: integer
                  behind_by:
                    type: integer
                  total_commits:
                    type: integer
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        filename:
                          type: string
                        status:
                          type: string
                        additions:
                          type: integer
                        deletions:
                          type: integer
                        changes:
                          type: integer
                        patch:
                          type: string
                        contents_url:
                          type: string
  /repos/{owner}/{repo}/issues:
    get:
      summary: List issues for a repository
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
    post:
      summary: Create an issue
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
  /repos/{owner}/{repo}/issues/{issue_number}:
    patch:
      summary: Update an issue
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
  /repos/{owner}/{repo}/issues/{issue_number}/comments:
    get:
      summary: List issue comments
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
    post:
      summary: Create an issue comment
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
  /repos/{owner}/{repo}/pulls:
    get:
      summary: List pull requests
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
  /repos/{owner}/{repo}/pulls/{pull_number}:
    get:
      summary: Get a pull request
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: pull_number
          in: path
          required: true
          schema:
            type: integer
  /repos/{owner}/{repo}/pulls/{pull_number}/comments:
    get:
      summary: List pull request comments
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: pull_number
          in: path
          required: true
          schema:
            type: integer
  /search/repositories:
    get:
      summary: Search repositories
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
  /search/issues:
    get:
      summary: Search issues
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
components:
  schemas:
    CommitFile:
      type: object
      properties:
        filename:
          type: string
        status:
          type: string
          enum: [added, modified, removed]
        additions:
          type: integer
        deletions:
          type: integer
        changes:
          type: integer
        patch:
          type: string
    CommitStats:
      type: object
      properties:
        total:
          type: integer
        additions:
          type: integer
        deletions:
          type: integer
    CommitResponse:
      type: object
      properties:
        sha:
          type: string
        commit:
          type: object
          properties:
            message:
              type: string
            author:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                date:
                  type: string
        stats:
          $ref: '#/components/schemas/CommitStats'
        files:
          type: array
          items:
            $ref: '#/components/schemas/CommitFile'
    CompareCommitsResponse:
      type: object
      properties:
        status:
          type: string
        ahead_by:
          type: integer
        behind_by:
          type: integer
        total_commits:
          type: integer
        commits:
          type: array
          items:
            type: object
            properties:
              sha:
                type: string
              commit:
                type: object
                properties:
                  message:
                    type: string
                  author:
                    type: object
                    properties:
                      name:
                        type: string
                      date:
                        type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/CommitFile'

        </description>
        <developerName>instruction_github_tasks0</developerName>
        <language xsi:nil="true"/>
        <masterLabel>instruction_github_tasks0</masterLabel>
    </genAiPluginInstructions>
    <language>en_US</language>
    <masterLabel>MyOrgButler: GitHub Tasks</masterLabel>
    <pluginType>Topic</pluginType>
    <scope>
Use this topic for browsing GitHub repositories, managing issues, and viewing pull requests. Includes:
- User information and repository listing
- Repository details, topics, and README content
- Issue management (create, update, comment)
- Pull request information and comments
- Search functionality for repositories and issues

Does NOT handle:
- Repository creation or deletion
- Organization/team management 
- GitHub Actions or workflows
- Pull request merging or approval
- Security and billing features
    </scope>
</GenAiPlugin>