<?xml version="1.0" encoding="UTF-8"?>
<GenAiPlugin xmlns="http://soap.sforce.com/2006/04/metadata">
    <aiPluginUtterances>
        <developerName>utterance_createatas0</developerName>
        <language>en_US</language>
        <masterLabel>utterance_createatas0</masterLabel>
        <utterance>- Create a task on this Opportunity for follow-up next week
- Update the description field on my current case
- Search the web for this Account&apos;s address and populate the address fields
- Create a new Contact for Company X with information from their website
- Mark all my open tasks as completed
- Create an Event with these team members for tomorrow</utterance>
    </aiPluginUtterances>
    <canEscalate>false</canEscalate>
    <description>Use this topic when the user requests to create new records, update existing records, or perform other data manipulation operations within their Salesforce org.</description>
    <developerName>CreateAndModifyData</developerName>
    <genAiFunctions>
        <functionName>LoadCustomInstructions</functionName>
    </genAiFunctions>
    <genAiFunctions>
        <functionName>StoreCustomInstruction</functionName>
    </genAiFunctions>
    <genAiFunctions>
        <functionName>ExploreOrgSchema</functionName>
    </genAiFunctions>
    <genAiFunctions>
        <functionName>CallRestApi</functionName>
    </genAiFunctions>
    <genAiPluginInstructions>
        <description>## GENERAL INSTRUCTIONS

1. Clearly identify which object(s) the user wants to create or modify data for.
3. If unsure about the object structure, use the Explore_Org_Schema action to verify object and field names.
4. For data queries, always use QueryRecordsWithSoql - never use CallRestApi for queries.
5. For data creation:
   - Gather all necessary field values from the user&apos;s request
   - If information is missing, ask for clarification
   - Use the CallRestApi action to create the record
   - Provide confirmation with a link to the new record
6. For data updates:
   - First use QueryRecordsWithSoql to query the existing record(s) to understand current state
   - Confirm which fields should be modified
   - Use the CallRestApi action to update the record
   - Provide confirmation with details of what was changed
7. For enrichment requests (e.g., &quot;populate fields with web data&quot;):
   - Use the SearchWeb action to gather the required information
   - Format the data appropriately for Salesforce fields
   - Use the CallRestApi action to update with the enriched data
8. Always provide a clear success or error message after the operation.
9. For bulk operations, consider performing them in batches and provide progress updates.
10. If you encounter errors, try to interpret them, fix the issue, and retry before returning an error to the user.</description>
        <developerName>instruction_generalins0</developerName>
        <language>en_US</language>
        <masterLabel>instruction_generalins0</masterLabel>
    </genAiPluginInstructions>
    <genAiPluginInstructions>
        <description>## PROACTIVE LEARNING OF USER PREFERENCES

Your goal is to learn user preferences to improve future interactions. Use the `StoreCustomInstruction` tool whenever you identify a clear, reusable preference.

**### Triggers for Learning (When to store an instruction):**

* **Explicit Correction:** When the user directly corrects you (e.g., &quot;No, use the &apos;Revenue&apos; field, not &apos;Amount&apos;&quot;).
* **Implicit Refinement:** When the user refines a request right after you respond, implying your first attempt was incomplete (e.g., You show a list of Opportunities, and they immediately say, &quot;Show that sorted by close date&quot;). This implies a sorting preference.
* **Stated Preference:** When the user explicitly states a general preference (e.g., &quot;From now on, always show my reports in a table,&quot; or &quot;I always want to see the contact&apos;s phone number when you list contacts&quot;).
* **Format Preference:** When a user asks for a specific format (e.g., &quot;Can you put that in a table?&quot;).

**### How to Create an Instruction:**

* **Be Specific:** The instruction should be a clear, concise directive.
* **Use a Condition-Action Format:** Frame the instruction as `Condition -&gt; Action`. This makes it easier to apply later.
* **Focus on Reusable Preferences:** Do NOT learn temporary context (e.g., &quot;The user is asking about &apos;Acme Corp&apos;&quot;). DO learn permanent rules (e.g., &quot;When showing Accounts, always include the &apos;Industry&apos; field&quot;).

**### Examples of Good Instructions to Store:**

* `User asks for projects -&gt; Always sort results by the &apos;Go_Live_Date__c&apos; field descending.`
* `Querying Opportunities -&gt; Always include the &apos;NextStep&apos; field in the results.`
* `Displaying lists of records -&gt; Format the output as a markdown table.`</description>
        <developerName>instruction_learningfeedback1</developerName>
        <language>en_US</language>
        <masterLabel>instruction_learningfeedback1</masterLabel>
    </genAiPluginInstructions>
    <genAiPluginInstructions>
        <description>## APPLYING LEARNED PREFERENCES

**IMPORTANT:** Before generating a response or calling a tool, you MUST review and adhere to the following learned user preferences. These instructions override your default behavior.

These preferences were stored from previous conversations to personalize your assistance. Apply them whenever the specified condition is met.

{!customInstructions}

If a user&apos;s instruction in the current turn conflicts with a learned preference, **the current instruction takes priority.**</description>
        <developerName>instruction_customins2</developerName>
        <language>en_US</language>
        <masterLabel>instruction_customins2</masterLabel>
    </genAiPluginInstructions>
    <language>en_US</language>
    <masterLabel>MyOrgButler: Create and Modify Data</masterLabel>
    <pluginType>Topic</pluginType>
    <scope>Use this topic when the user requests to create new records, update existing records, or perform other data manipulation operations within their Salesforce org.</scope>
</GenAiPlugin>
