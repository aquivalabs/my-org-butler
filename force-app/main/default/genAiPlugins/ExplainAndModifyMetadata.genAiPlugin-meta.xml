<?xml version="1.0" encoding="UTF-8"?>
<GenAiPlugin xmlns="http://soap.sforce.com/2006/04/metadata">
    <aiPluginUtterances>
        <developerName>utterance_showmealli0</developerName>
        <language>en_US</language>
        <masterLabel>utterance_showmealli0</masterLabel>
        <utterance>- Show me all installed packages
- What does this package do?
- Visualize its core objects
- Which active Flows do we have and what do they do?
- Create me an Apex class that does X
- How are our validation rules configured for Opportunity?
- Modify this Apex trigger to include additional functionality
- What custom fields do we have on the Account object?</utterance>
    </aiPluginUtterances>
    <canEscalate>false</canEscalate>
    <description>Use this topic when the user asks about Salesforce metadata components, requests information about installed packages, wants to understand configuration, or needs to create/modify metadata components like Apex classes, Flows, or custom objects.</description>
    <developerName>ExplainAndModifyMetadata</developerName>
    <genAiFunctions>
        <functionName>LoadUserInfo</functionName>
    </genAiFunctions>
    <genAiFunctions>
        <functionName>UpdateUserInfo</functionName>
    </genAiFunctions>
    <genAiFunctions>
        <functionName>CallMetadataApi</functionName>
    </genAiFunctions>
    <genAiFunctions>
        <functionName>CallToolingApi</functionName>
    </genAiFunctions>
    <genAiFunctions>
        <functionName>CreatePlantUmlUrl</functionName>
    </genAiFunctions>
    <genAiFunctions>
        <functionName>SearchWeb</functionName>
    </genAiFunctions>
    <genAiPluginInstructions>
        <description>## GENERAL INSTRUCTIONS

Always start by gathering all relevant information from the user. Based on the metadata type, decide whether to use the tooling API or the metadata API—use the tooling API for Apex classes, triggers, and other development components, and the metadata API for most other types. Ensure that the metadata is properly structured and formatted before making any changes. Execute the appropriate API action to create or modify components, and provide either a confirmation of success or a clear explanation of any errors.

When handling packages, query installed components and explain their functionality, dependencies, and relationships. Use web search if additional documentation is needed to clarify package behavior or structure.

If a diagram would help convey complex metadata or process relationships, generate one using the appropriate visualization method, making sure it’s clearly labeled and easy to understand. All responses should be presented in a clean and organized manner.</description>
        <developerName>instruction_generalins0</developerName>
        <language>en_US</language>
        <masterLabel>instruction_generalins0</masterLabel>
    </genAiPluginInstructions>
    <genAiPluginInstructions>
        <description>## USER INFO AND PREFERENCES

{!userInfo}</description>
        <developerName>instruction_userinfoan1</developerName>
        <language>en_US</language>
        <masterLabel>instruction_userinfoan1</masterLabel>
    </genAiPluginInstructions>
    <language>en_US</language>
    <masterLabel>MyOrgButler: Explain and Modify Metadata</masterLabel>
    <pluginType>Topic</pluginType>
    <scope>Use this topic when the user asks about Salesforce metadata components, requests information about installed packages, wants to understand configuration, or needs to create/modify metadata components like Apex classes, Flows, or custom objects.</scope>
</GenAiPlugin>
